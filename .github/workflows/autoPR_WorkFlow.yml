# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - '**'

jobs: 
  updateAuthor:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: checking out code
        uses: actions/checkout@v2

      # Extract git commit data (optional, you can keep it if needed)
      - name: extract git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      # Get the last commit message and store it in an environment variable
      - name: Get last commit message
        id: get_commit_message
        run: echo "COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      # Get the current branch name and store it in an environment variable
      - name: Get current branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      # Update author information (optional, if needed for your workflow)
      - name: Update Author Information
        run: echo ${{ env.GIT_COMMIT_AUTHOR_NAME }} > AUTHOR

      # Create and raise a pull request with the correct commit message and branch name
      - name: Raise PR
        uses: peter-evans/create-pull-request@v3
        with:
          branch: "${{ env.BRANCH_NAME }}"  # Usa la rama original como base para la PR
          base: main
          # Usa el mensaje del commit como t√≠tulo de la PR
          title: "${{ env.COMMIT_MSG }}"
          committer: ${{ env.GIT_COMMIT_AUTHOR_NAME }} <${{ env.GIT_COMMIT_AUTHOR_EMAIL }}">
          body: |
            This is to show automatic PR creation
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-branch: true
